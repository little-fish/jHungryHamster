
/*
 * Copyright 2017 Martin Misiarz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package cz.babi.java.jhungryhamster.gui;

import static cz.babi.java.jhungryhamster.utils.Common.RESOURCE_BUNDLE;

import cz.babi.java.jhungryhamster.entity.Settings;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;

/**
 *
 * @author babi
 */
public class RecipePanel extends javax.swing.JPanel {
    
    Settings settings = Settings.getInstance();
    
    final PropertyChangeSupport propertyChangeSupport;
    
    /** Creates new form RecipePanel */
    public RecipePanel() {
        initComponents();
        pnlRecipeDetailsPanel.setVisible(!settings.isHideRecipeDetails());
        propertyChangeSupport = pnlRecipeTitlePanel.getPropertyChangeSupport();
        propertyChangeSupport.addPropertyChangeListener("controlStateOn", new MyPropertyChangeListener());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRecipeTitlePanel = new RecipeTitlePanel();
        pnlRecipeDetailsPanel = new RecipeDetailsPanel();
        pnlRecipeBodyPanel = new RecipeBodyPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null,
                RESOURCE_BUNDLE.getString("RecipePanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 0, 13)));
        setMinimumSize(new java.awt.Dimension(522, 282));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRecipeBodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addComponent(pnlRecipeDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addComponent(pnlRecipeTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlRecipeTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRecipeDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(pnlRecipeBodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RecipeBodyPanel pnlRecipeBodyPanel;
    private RecipeDetailsPanel pnlRecipeDetailsPanel;
    private RecipeTitlePanel pnlRecipeTitlePanel;
    // End of variables declaration//GEN-END:variables

    /**
     * Listener for controlStateOn property change
     */
    private class MyPropertyChangeListener implements PropertyChangeListener {
        
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            if(evt.getNewValue().equals(true)) pnlRecipeDetailsPanel.setVisible(true);
            else pnlRecipeDetailsPanel.setVisible(false);
        }
    }
}
